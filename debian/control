Source: golang-github-googleapis-gnostic
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Dmitry Smirnov <onlyjob@debian.org>,
           Anthony Fok <foka@debian.org>
Section: golang
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any,
               golang-github-docopt-docopt-go-dev,
               golang-golang-x-net-dev,
               golang-golang-x-oauth2-google-dev,
               golang-goprotobuf-dev,
               gogoprotobuf,
               libprotobuf-dev,
               golang-yaml.v2-dev
Standards-Version: 4.5.1
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-googleapis-gnostic
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-googleapis-gnostic.git
Homepage: https://github.com/googleapis/gnostic
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/googleapis/gnostic

Package: golang-github-googleapis-gnostic-dev
Architecture: all
Depends: ${misc:Depends},
         golang-github-docopt-docopt-go-dev,
         golang-golang-x-net-dev,
         golang-golang-x-oauth2-google-dev,
         golang-goprotobuf-dev,
         golang-yaml.v2-dev
Description: compiler for OpenAPI specification - library
 Protocol Buffers (https://developers.google.com/protocol-buffers/)
 provide a language-neutral, platform-neutral, extensible mechanism
 for serializing structured data. gnostic's Protocol Buffer models for
 the OpenAPI Specification can be used to generate code that includes
 data structures with explicit fields for the elements of an OpenAPI
 description. This makes it possible for developers to work with
 OpenAPI descriptions in type-safe ways, which is particularly useful in
 strongly-typed languages like Go and Swift.
 .
 gnostic reads OpenAPI descriptions into these generated data structures,
 reports errors, resolves internal dependencies, and writes the results in
 a binary form that can be used in any language that is supported by the
 Protocol Buffer tools.  A plugin interface simplifies integration with
 API tools written in a variety of different languages, and when necessary,
 Protocol Buffer OpenAPI descriptions can be reexported as JSON or YAML.
 .
 This package provides the development files.

#Package: gnostic
#Architecture: any
#Built-Using: ${misc:Built-Using}
#Depends: ${misc:Depends},
#         ${shlibs:Depends}
#Description: compiler for OpenAPI specification - binaries
# Protocol Buffers (https://developers.google.com/protocol-buffers/)
# provide a language-neutral, platform-neutral, extensible mechanism
# for serializing structured data. gnostic's Protocol Buffer models for
# the OpenAPI Specification can be used to generate code that includes
# data structures with explicit fields for the elements of an OpenAPI
# description. This makes it possible for developers to work with
# OpenAPI descriptions in type-safe ways, which is particularly useful in
# strongly-typed languages like Go and Swift.
# .
# gnostic reads OpenAPI descriptions into these generated data structures,
# reports errors, resolves internal dependencies, and writes the results in
# a binary form that can be used in any language that is supported by the
# Protocol Buffer tools.  A plugin interface simplifies integration with
# API tools written in a variety of different languages, and when necessary,
# Protocol Buffer OpenAPI descriptions can be reexported as JSON or YAML.
# .
# This package provides the binaries.
